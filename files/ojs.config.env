####################
# General Settings #
####################

# Set this to On once the system has been installed
# (This is generally done automatically by the installer)
[[ -z "${PKP_GENERAL_INSTALLED}" ]] && export PKP_GENERAL_INSTALLED=Off

# The canonical URL to the OJS installation (excluding the trailing slash)
[[ -z "${PKP_GENERAL_BASE_URL}" ]] && export PKP_GENERAL_BASE_URL="http://pkp.sfu.ca/ojs"

# Session cookie name
[[ -z "${PKP_GENERAL_SESSION_COOKIE_NAME}" ]] && export PKP_GENERAL_SESSION_COOKIE_NAME=OJSSID

# Session cookie path; if not specified, defaults to the detected base path
# [[ -z "${PKP_GENERAL_SESSION_COOKIE_PATH}" ]] && export PKP_GENERAL_SESSION_COOKIE_PATH=/

# Number of days to save login cookie for if user selects to remember
# (set to 0 to force expiration at end of current session)
[[ -z "${PKP_GENERAL_SESSION_LIFETIME}" ]] && export PKP_GENERAL_SESSION_LIFETIME=30

# Enable support for running scheduled tasks
# Set this to On if you have set up the scheduled tasks script to
# execute periodically
[[ -z "${PKP_GENERAL_SCHEDULED_TASKS}" ]] && export PKP_GENERAL_SCHEDULED_TASKS=Off

# Site time zone
# Please refer to lib/pkp/registry/timeZones.xml for a full list of supported
# time zones.
# I.e.:
# <entry key="Europe/Amsterdam" name="Amsterdam" />
# time_zone="Amsterdam"
[[ -z "${PKP_GENERAL_TIME_ZONE}" ]] && export PKP_GENERAL_TIME_ZONE="UTC"

# Short and long date formats
[[ -z "${PKP_GENERAL_DATE_FORMAT_TRUNC}" ]] && export PKP_GENERAL_DATE_FORMAT_TRUNC="%m-%d"
[[ -z "${PKP_GENERAL_DATE_FORMAT_SHORT}" ]] && export PKP_GENERAL_DATE_FORMAT_SHORT="%Y-%m-%d"
[[ -z "${PKP_GENERAL_DATE_FORMAT_LONG}" ]] && export PKP_GENERAL_DATE_FORMAT_LONG="%B %e, %Y"
[[ -z "${PKP_GENERAL_DATETIME_FORMAT_SHORT}" ]] && export PKP_GENERAL_DATETIME_FORMAT_SHORT="%Y-%m-%d %I:%M %p"
[[ -z "${PKP_GENERAL_DATETIME_FORMAT_LONG}" ]] && export PKP_GENERAL_DATETIME_FORMAT_LONG="%B %e, %Y - %I:%M %p"
[[ -z "${PKP_GENERAL_TIME_FORMAT}" ]] && export PKP_GENERAL_TIME_FORMAT="%I:%M %p"

# Use URL parameters instead of CGI PATH_INFO. This is useful for
# broken server setups that don't support the PATH_INFO environment
# variable.
[[ -z "${PKP_GENERAL_DISABLE_PATH_INFO}" ]] && export PKP_GENERAL_DISABLE_PATH_INFO=Off

# Use fopen(...) for URL-based reads. Modern versions of dspace
# will not accept requests using fopen, as it does not provide a
# User Agent, so this option is disabled by default. If this feature
# is disabled by PHP's configuration, this setting will be ignored.
[[ -z "${PKP_GENERAL_ALLOW_URL_FOPEN}" ]] && export PKP_GENERAL_ALLOW_URL_FOPEN=Off

# Base URL override settings: Entries like the following examples can
# be used to override the base URLs used by OJS. If you want to use a
# proxy to rewrite URLs to OJS, configure your proxy's URL here.
# Syntax: base_url=http://www.myUrl.com
# To override URLs that aren't part of a particular journal, use a
# journal_path of "index".
# Examples:
# [[ -z "${PKP_GENERAL_BASE_URL}" ]] && export PKP_GENERAL_BASE_URL=http://www.myUrl.com
# [[ -z "${PKP_GENERAL_BASE_URL}" ]] && export PKP_GENERAL_BASE_URL=http://www.myUrl.com/myJournal
# [[ -z "${PKP_GENERAL_BASE_URL}" ]] && export PKP_GENERAL_BASE_URL=http://myOtherJournal.myUrl.com

# Generate RESTful URLs using mod_rewrite.  This requires the
# rewrite directive to be enabled in your .htaccess or httpd.conf.
# See FAQ for more details.
[[ -z "${PKP_GENERAL_RESTFUL_URLS}" ]] && export PKP_GENERAL_RESTFUL_URLS=Off

# Allow the X_FORWARDED_FOR header to override the REMOTE_ADDR as the source IP
# Set this to "On" if you are behind a reverse proxy and you control the X_FORWARDED_FOR
# Warning: This defaults to "On" if unset for backwards compatibility.
[[ -z "${PKP_GENERAL_TRUST_X_FORWARDED_FOR}" ]] && export PKP_GENERAL_TRUST_X_FORWARDED_FOR=Off

# Allow javascript files to be served through a content delivery network (set to off to use local files)
[[ -z "${PKP_GENERAL_ENABLE_CDN}" ]] && export PKP_GENERAL_ENABLE_CDN=On

# Set the maximum number of citation checking processes that may run in parallel.
# Too high a value can increase server load and lead to too many parallel outgoing
# requests to citation checking web services. Too low a value can lead to significantly
# slower citation checking performance. A reasonable value is probably between 3
# and 10. The more your connection bandwidth allows the better.
[[ -z "${PKP_GENERAL_CITATION_CHECKING_MAX_PROCESSES}" ]] && export PKP_GENERAL_CITATION_CHECKING_MAX_PROCESSES=3

# Display a message on the site admin and journal manager user home pages if there is an upgrade available
[[ -z "${PKP_GENERAL_SHOW_UPGRADE_WARNING}" ]] && export PKP_GENERAL_SHOW_UPGRADE_WARNING=On

# Set the following parameter to off if you want to work with the uncompiled (non-minified) JavaScript
# source for debugging or if you are working off a development branch without compiled JavaScript.
[[ -z "${PKP_GENERAL_ENABLE_MINIFIED}" ]] && export PKP_GENERAL_ENABLE_MINIFIED=Off

# Provide a unique site ID and OAI base URL to PKP for statistics and security
# alert purposes only.
[[ -z "${PKP_GENERAL_ENABLE_BEACON}" ]] && export PKP_GENERAL_ENABLE_BEACON=On

# Set this to "On" if you would like to only have a single, site-wide Privacy
# Statement, rather than a separate Privacy Statement for each journal. Setting
# this to "Off" will allow you to enter a site-wide Privacy Statement as well
# as separate Privacy Statements for each journal.
[[ -z "${PKP_GENERAL_SITEWIDE_PRIVACY_STATEMENT}" ]] && export PKP_GENERAL_SITEWIDE_PRIVACY_STATEMENT=Off


#####################
# Database Settings #
#####################

[[ -z "${PKP_DATABASE_DRIVER}" ]] && export PKP_DATABASE_DRIVER=mysqli
[[ -z "${PKP_DATABASE_HOST}" ]] && export PKP_DATABASE_HOST=localhost
[[ -z "${PKP_DATABASE_USERNAME}" ]] && export PKP_DATABASE_USERNAME=ojs
[[ -z "${PKP_DATABASE_PASSWORD}" ]] && export PKP_DATABASE_PASSWORD=ojs
[[ -z "${PKP_DATABASE_NAME}" ]] && export PKP_DATABASE_NAME=ojs
# Set the non-standard port and/or socket, if used
# [[ -z "${PKP_DATABASE_PORT}" ]] && export PKP_DATABASE_PORT=3306
# [[ -z "${PKP_DATABASE_UNIX_SOCKET}" ]] && export PKP_DATABASE_UNIX_SOCKET=/var/run/mysqld/mysqld.sock

# Enable persistent connections
[[ -z "${PKP_DATABASE_PERSISTENT}" ]] && export PKP_DATABASE_PERSISTENT=Off

# Enable database debug output (very verbose!)
[[ -z "${PKP_DATABASE_DEBUG}" ]] && export PKP_DATABASE_DEBUG=Off

##################
# Cache Settings #
##################



# Choose the type of object data caching to use. Options are:
# - memcache: Use the memcache server configured below
# - xcache: Use the xcache variable store
# - apc: Use the APC variable store
# - none: Use no caching.
[[ -z "${PKP_CACHE_OBJECT_CACHE}" ]] && export PKP_CACHE_OBJECT_CACHE=none

# Enable memcache support
[[ -z "${PKP_CACHE_MEMCACHE_HOSTNAME}" ]] && export PKP_CACHE_MEMCACHE_HOSTNAME=localhost
[[ -z "${PKP_CACHE_MEMCACHE_PORT}" ]] && export PKP_CACHE_MEMCACHE_PORT=11211

# For site visitors who are not logged in, many pages are often entirely
# static (e.g. About, the home page, etc). If the option below is enabled,
# these pages will be cached in local flat files for the number of hours
# specified in the web_cache_hours option. This will cut down on server
# overhead for many requests, but should be used with caution because:
# 1) Things like journal metadata changes will not be reflected in cached
#    data until the cache expires or is cleared, and
# 2) This caching WILL NOT RESPECT DOMAIN-BASED SUBSCRIPTIONS.
# However, for situations like hosting high-volume open access journals, it's
# an easy way of decreasing server load.
#
# When using web_cache, configure a tool to periodically clear out cache files
# such as CRON. For example, configure it to run the following command:
# find .../ojs/cache -maxdepth 1 -name wc-\*.html -mtime +1 -exec rm "{}" ";"
[[ -z "${PKP_CACHE_WEB_CACHE}" ]] && export PKP_CACHE_WEB_CACHE=Off
[[ -z "${PKP_CACHE_WEB_CACHE_HOURS}" ]] && export PKP_CACHE_WEB_CACHE_HOURS=1


#########################
# Localization Settings #
#########################



# Default locale
[[ -z "${PKP_I18N_LOCALE}" ]] && export PKP_I18N_LOCALE=en_US

# Client output/input character set
[[ -z "${PKP_I18N_CLIENT_CHARSET}" ]] && export PKP_I18N_CLIENT_CHARSET=utf-8

# Database connection character set
# Must be set to "Off" if not supported by the database server
# If enabled, must be the same character set as "client_charset"
# (although the actual name may differ slightly depending on the server)
[[ -z "${PKP_I18N_CONNECTION_CHARSET}" ]] && export PKP_I18N_CONNECTION_CHARSET=Off

# Database storage character set
# Must be set to "Off" if not supported by the database server
[[ -z "${PKP_I18N_DATABASE_CHARSET}" ]] && export PKP_I18N_DATABASE_CHARSET=Off


#################
# File Settings #
#################



# Complete path to directory to store uploaded files
# (This directory should not be directly web-accessible)
# Windows users should use forward slashes
[[ -z "${PKP_FILES_FILES_DIR}" ]] && export PKP_FILES_FILES_DIR=files

# Path to the directory to store public uploaded files
# (This directory should be web-accessible and the specified path
# should be relative to the base OJS directory)
# Windows users should use forward slashes
[[ -z "${PKP_FILES_PUBLIC_FILES_DIR}" ]] && export PKP_FILES_PUBLIC_FILES_DIR=public

# Permissions mask for created files and directories
[[ -z "${PKP_FILES_UMASK}" ]] && export PKP_FILES_UMASK=0022

# The minimum percentage similarity between filenames that should be considered
# a possible revision
[[ -z "${PKP_FILES_FILENAME_REVISION_MATCH}" ]] && export PKP_FILES_FILENAME_REVISION_MATCH=70


############################
# Fileinfo (MIME) Settings #
############################


# [[ -z "${PKP_FINFO_MIME_DATABASE_PATH}" ]] && export PKP_FINFO_MIME_DATABASE_PATH=/etc/magic.mime


#####################
# Security Settings #
#####################



# Force SSL connections site-wide
[[ -z "${PKP_SECURITY_FORCE_SSL}" ]] && export PKP_SECURITY_FORCE_SSL=Off

# Force SSL connections for login only
[[ -z "${PKP_SECURITY_FORCE_LOGIN_SSL}" ]] && export PKP_SECURITY_FORCE_LOGIN_SSL=Off

# This check will invalidate a session if the user's IP address changes.
# Enabling this option provides some amount of additional security, but may
# cause problems for users behind a proxy farm (e.g., AOL).
[[ -z "${PKP_SECURITY_SESSION_CHECK_IP}" ]] && export PKP_SECURITY_SESSION_CHECK_IP=On

# The encryption (hashing) algorithm to use for encrypting user passwords
# Valid values are: md5, sha1
# NOTE: This hashing method is deprecated, but necessary to permit gradual
# migration of old password hashes.
[[ -z "${PKP_SECURITY_ENCRYPTION}" ]] && export PKP_SECURITY_ENCRYPTION=sha1

# The unique salt to use for generating password reset hashes
[[ -z "${PKP_SECURITY_SALT}" ]] && export PKP_SECURITY_SALT="YouMustSetASecretKeyHere!!"

# The unique secret used for encoding and decoding API keys
[[ -z "${PKP_SECURITY_API_KEY_SECRET}" ]] && export PKP_SECURITY_API_KEY_SECRET=""

# The number of seconds before a password reset hash expires (defaults to 7200 / 2 hours)
[[ -z "${PKP_SECURITY_RESET_SECONDS}" ]] && export PKP_SECURITY_RESET_SECONDS=7200

# Allowed HTML tags for fields that permit restricted HTML.
# Use e.g. "img,p" to allow "src" and "alt" attributes to the "img"
# tag, and also to permit the "p" paragraph tag. Unspecified attributes will be
# stripped.
[[ -z "${PKP_SECURITY_ALLOWED_HTML}" ]] && export PKP_SECURITY_ALLOWED_HTML="a,sup,sub,br,p"

#Is implicit authentication enabled or not

#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH}" ]] && export PKP_SECURITY_IMPLICIT_AUTH=On

#Implicit Auth Header Variables

#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_FIRST_NAME}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_FIRST_NAME=HTTP_GIVENNAME
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_LAST_NAME}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_LAST_NAME=HTTP_SN
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_EMAIL}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_EMAIL=HTTP_MAIL
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_PHONE}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_PHONE=HTTP_TELEPHONENUMBER
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_INITIALS}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_INITIALS=HTTP_METADATA_INITIALS
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_MAILING_ADDRESS}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_MAILING_ADDRESS=HTTP_METADATA_HOMEPOSTALADDRESS
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_HEADER_UIN}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_HEADER_UIN=HTTP_UID

# A space delimited list of uins to make admin
#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_ADMIN_LIST}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_ADMIN_LIST="jdoe@email.ca jshmo@email.ca"

# URL of the implicit auth 'Way Finder' page. See pages/login/LoginHandler.inc.php for usage.

#[[ -z "${PKP_SECURITY_IMPLICIT_AUTH_WAYF_URL}" ]] && export PKP_SECURITY_IMPLICIT_AUTH_WAYF_URL="/Shibboleth.sso/wayf"



##################
# Email Settings #
##################



# Use SMTP for sending mail instead of mail()
# [[ -z "${PKP_EMAIL_SMTP}" ]] && export PKP_EMAIL_SMTP=On

# SMTP server settings
# [[ -z "${PKP_EMAIL_SMTP_SERVER}" ]] && export PKP_EMAIL_SMTP_SERVER=mail.example.com
# [[ -z "${PKP_EMAIL_SMTP_PORT}" ]] && export PKP_EMAIL_SMTP_PORT=25

# Enable SMTP authentication
# Supported mechanisms: ssl, tls
# [[ -z "${PKP_EMAIL_SMTP_AUTH}" ]] && export PKP_EMAIL_SMTP_AUTH=ssl
# [[ -z "${PKP_EMAIL_SMTP_USERNAME}" ]] && export PKP_EMAIL_SMTP_USERNAME=username
# [[ -z "${PKP_EMAIL_SMTP_PASSWORD}" ]] && export PKP_EMAIL_SMTP_PASSWORD=password

# Allow envelope sender to be specified
# (may not be possible with some server configurations)
# [[ -z "${PKP_EMAIL_ALLOW_ENVELOPE_SENDER}" ]] && export PKP_EMAIL_ALLOW_ENVELOPE_SENDER=Off

# Default envelope sender to use if none is specified elsewhere
# [[ -z "${PKP_EMAIL_DEFAULT_ENVELOPE_SENDER}" ]] && export PKP_EMAIL_DEFAULT_ENVELOPE_SENDER=my_address@my_host.com

# Force the default envelope sender (if present)
# This is useful if setting up a site-wide no-reply address
# The reply-to field will be set with the reply-to or from address.
# [[ -z "${PKP_EMAIL_FORCE_DEFAULT_ENVELOPE_SENDER}" ]] && export PKP_EMAIL_FORCE_DEFAULT_ENVELOPE_SENDER=Off

# Force a DMARC compliant from header (RFC5322.From)
# If any of your users have email addresses in domains not under your control
# you may need to set this to be compliant with DMARC policies published by
# those 3rd party domains.
# Setting this will move the users address into the reply-to field and the
# from field wil be rewritten with the default_envelope_sender.
# To use this you must set force_default_enveloper_sender=On and
# default_envelope_sender must be set to a valid address in a domain you own.
# [[ -z "${PKP_EMAIL_FORCE_DMARC_COMPLIANT_FROM}" ]] && export PKP_EMAIL_FORCE_DMARC_COMPLIANT_FROM=Off

# The display name to use with a DMARC compliant from header
# By default the DMARC compliant from will have an empty name but this can
# be changed by adding a text here.
# You can use '%n' to insert the users name from the original from header
# and '%s' to insert the localized sitename.
# [[ -z "${PKP_EMAIL_DMARC_COMPLIANT_FROM_DISPLAYNAME}" ]] && export PKP_EMAIL_DMARC_COMPLIANT_FROM_DISPLAYNAME='%n via %s'

# Amount of time required between attempts to send non-editorial emails
# in seconds. This can be used to help prevent email relaying via OJS.
[[ -z "${PKP_EMAIL_TIME_BETWEEN_EMAILS}" ]] && export PKP_EMAIL_TIME_BETWEEN_EMAILS=3600

# Maximum number of recipients that can be included in a single email
# (either as To:, Cc:, or Bcc: addresses) for a non-privileged user
[[ -z "${PKP_EMAIL_MAX_RECIPIENTS}" ]] && export PKP_EMAIL_MAX_RECIPIENTS=10

# If enabled, email addresses must be validated before login is possible.
[[ -z "${PKP_EMAIL_REQUIRE_VALIDATION}" ]] && export PKP_EMAIL_REQUIRE_VALIDATION=Off

# Maximum number of days before an unvalidated account expires and is deleted
[[ -z "${PKP_EMAIL_VALIDATION_TIMEOUT}" ]] && export PKP_EMAIL_VALIDATION_TIMEOUT=14


###################
# Search Settings #
###################



# Minimum indexed word length
[[ -z "${PKP_SEARCH_MIN_WORD_LENGTH}" ]] && export PKP_SEARCH_MIN_WORD_LENGTH=3

# The maximum number of search results fetched per keyword. These results
# are fetched and merged to provide results for searches with several keywords.
[[ -z "${PKP_SEARCH_RESULTS_PER_KEYWORD}" ]] && export PKP_SEARCH_RESULTS_PER_KEYWORD=500

# The number of hours for which keyword search results are cached.
[[ -z "${PKP_SEARCH_RESULT_CACHE_HOURS}" ]] && export PKP_SEARCH_RESULT_CACHE_HOURS=1

# Paths to helper programs for indexing non-text files.
# Programs are assumed to output the converted text to stdout, and "%s" is
# replaced by the file argument.
# Note that using full paths to the binaries is recommended.
# Uncomment applicable lines to enable (at most one per file type).
# Additional "index" lines can be added for any mime type to be
# indexed.

# PDF
# index' ' '"
# index' ' '"

# PostScript
# index' ' '"
# index' ' '"

# Microsoft Word
# [[ -z "${PKP_SEARCH_INDEX}" ]] && export PKP_SEARCH_INDEX="/usr/bin/antiword %s"
# [[ -z "${PKP_SEARCH_INDEX}" ]] && export PKP_SEARCH_INDEX="/usr/bin/catdoc %s"


################
# OAI Settings #
################



# Enable OAI front-end to the site
[[ -z "${PKP_OAI_OAI}" ]] && export PKP_OAI_OAI=On

# OAI Repository identifier
[[ -z "${PKP_OAI_REPOSITORY_ID}" ]] && export PKP_OAI_REPOSITORY_ID=ojs.pkp.sfu.ca

# Maximum number of records per request to serve via OAI
[[ -z "${PKP_OAI_OAI_MAX_RECORDS}" ]] && export PKP_OAI_OAI_MAX_RECORDS=100

######################
# Interface Settings #
######################



# Number of items to display per page; can be overridden on a per-journal basis
[[ -z "${PKP_INTERFACE_ITEMS_PER_PAGE}" ]] && export PKP_INTERFACE_ITEMS_PER_PAGE=25

# Number of page links to display; can be overridden on a per-journal basis
[[ -z "${PKP_INTERFACE_PAGE_LINKS}" ]] && export PKP_INTERFACE_PAGE_LINKS=10


####################
# Captcha Settings #
####################



# Whether or not to enable ReCaptcha
[[ -z "${PKP_CAPTCHA_RECAPTCHA}" ]] && export PKP_CAPTCHA_RECAPTCHA=off

# Public key for reCaptcha (see http://www.google.com/recaptcha)
[[ -z "${PKP_CAPTCHA_RECAPTCHA_PUBLIC_KEY}" ]] && export PKP_CAPTCHA_RECAPTCHA_PUBLIC_KEY=your_public_key

# Private key for reCaptcha (see http://www.google.com/recaptcha)
[[ -z "${PKP_CAPTCHA_RECAPTCHA_PRIVATE_KEY}" ]] && export PKP_CAPTCHA_RECAPTCHA_PRIVATE_KEY=your_private_key

# Whether or not to use Captcha on user registration
[[ -z "${PKP_CAPTCHA_CAPTCHA_ON_REGISTER}" ]] && export PKP_CAPTCHA_CAPTCHA_ON_REGISTER=on

# Validate the hostname in the ReCaptcha response
[[ -z "${PKP_CAPTCHA_RECAPTCHA_ENFORCE_HOSTNAME}" ]] && export PKP_CAPTCHA_RECAPTCHA_ENFORCE_HOSTNAME=Off

#####################
# External Commands #
#####################



# These are paths to (optional) external binaries used in
# certain plug-ins or advanced program features.

# Using full paths to the binaries is recommended.

# perl (used in paracite citation parser)
[[ -z "${PKP_CLI_PERL}" ]] && export PKP_CLI_PERL=/usr/bin/perl

# tar (used in backup plugin, translation packaging)
[[ -z "${PKP_CLI_TAR}" ]] && export PKP_CLI_TAR=/bin/tar

# On systems that do not have libxsl/xslt libraries installed, or for those who
# require a specific XSLT processor, you may enter the complete path to the
# XSLT renderer tool, with any required arguments. Use %xsl to substitute the
# location of the XSL stylesheet file, and %xml for the location of the XML
# source file; eg:
# /usr/bin/java -jar ~/java/xalan.jar -HTML -IN %xml -XSL %xsl
[[ -z "${PKP_CLI_XSLT_COMMAND}" ]] && export PKP_CLI_XSLT_COMMAND=""

##################
# Proxy Settings #
##################



# Note that allow_url_fopen must be set to Off before these proxy settings
# will take effect.

# The HTTP proxy configuration to use
# [[ -z "${PKP_PROXY_HTTP_HOST}" ]] && export PKP_PROXY_HTTP_HOST=localhost
# [[ -z "${PKP_PROXY_HTTP_PORT}" ]] && export PKP_PROXY_HTTP_PORT=80
# [[ -z "${PKP_PROXY_PROXY_USERNAME}" ]] && export PKP_PROXY_PROXY_USERNAME=username
# [[ -z "${PKP_PROXY_PROXY_PASSWORD}" ]] && export PKP_PROXY_PROXY_PASSWORD=password


##################
# Debug Settings #
##################



# Display a stack trace when a fatal error occurs.
# Note that this may expose private information and should be disabled
# for any production system.
[[ -z "${PKP_DEBUG_SHOW_STACKTRACE}" ]] && export PKP_DEBUG_SHOW_STACKTRACE=Off

# Display an error message when something goes wrong.
[[ -z "${PKP_DEBUG_DISPLAY_ERRORS}" ]] && export PKP_DEBUG_DISPLAY_ERRORS=Off

# Display deprecation warnings
[[ -z "${PKP_DEBUG_DEPRECATION_WARNINGS}" ]] && export PKP_DEBUG_DEPRECATION_WARNINGS=Off

# Log web service request information for debugging
[[ -z "${PKP_DEBUG_LOG_WEB_SERVICE_INFO}" ]] && export PKP_DEBUG_LOG_WEB_SERVICE_INFO=Off
